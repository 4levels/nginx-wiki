#
msgid ""
msgstr ""
"Project-Id-Version: Nginx Wiki 1.0\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2015-07-13 11:11+0100\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../../source/modules/upload.rst:2
msgid "Upload"
msgstr ""

#: ../../source/modules/upload.rst:5
msgid "Description"
msgstr ""

#: ../../source/modules/upload.rst:6
msgid ""
"**nginx-upload-module** - parses request body storing all files being "
"uploaded to a directory specified by upload_store directive. The files are "
"then being stripped from body and altered request is then passed to a "
"location specified by upload_pass directive, thus allowing arbitrary "
"handling of uploaded files. Each of file fields are being replaced by a set "
"of fields specified by upload_set_form_field directive. The content of each "
"uploaded file then could be read from a file specified by $upload_tmp_path "
"variable or the file could be simply moved to ultimate destination. Removal "
"of output files is controlled by directive upload_cleanup. If a request has "
"a method other than POST, the module returns error 405 (Method not allowed)."
" Requests with such methods could be processed in alternative location via "
"error_page directive."
msgstr ""

#: ../../source/modules/upload.rst:11
msgid "Source Repository"
msgstr ""

#: ../../source/modules/upload.rst:12
msgid "Get it from :github:`GitHub <vkholodkov/nginx-upload-module/tree/2.2>`"
msgstr ""

#: ../../source/modules/upload.rst:17
msgid "Installation"
msgstr ""

#: ../../source/modules/upload.rst:18
msgid ""
"After extracting, add the following option to your Nginx ./configure "
"command:"
msgstr ""

#: ../../source/modules/upload.rst:26
msgid "Directives"
msgstr ""

#: ../../source/modules/upload.rst:29
msgid "upload_pass"
msgstr ""

#: ../../source/modules/upload.rst:30
msgid "*upload_pass <location>*"
msgstr ""

#: ../../source/modules/upload.rst:31 ../../source/modules/upload.rst:51
#: ../../source/modules/upload.rst:61 ../../source/modules/upload.rst:81
#: ../../source/modules/upload.rst:104 ../../source/modules/upload.rst:132
#: ../../source/modules/upload.rst:156 ../../source/modules/upload.rst:192
msgid "*none*"
msgstr ""

#: ../../source/modules/upload.rst:32 ../../source/modules/upload.rst:52
#: ../../source/modules/upload.rst:62 ../../source/modules/upload.rst:72
#: ../../source/modules/upload.rst:82 ../../source/modules/upload.rst:105
#: ../../source/modules/upload.rst:133 ../../source/modules/upload.rst:157
#: ../../source/modules/upload.rst:173 ../../source/modules/upload.rst:183
#: ../../source/modules/upload.rst:193
msgid "*server,location*"
msgstr ""

#: ../../source/modules/upload.rst:34
msgid ""
"Specifies location to pass request body to. File fields will be stripped and"
" replaced by fields, containig necessary information to handle uploaded "
"files."
msgstr ""

#: ../../source/modules/upload.rst:39
msgid "upload_resumable"
msgstr ""

#: ../../source/modules/upload.rst:40
msgid "*upload_resumable <on/off>*"
msgstr ""

#: ../../source/modules/upload.rst:41 ../../source/modules/upload.rst:222
#: ../../source/modules/upload.rst:232
msgid "*off*"
msgstr ""

#: ../../source/modules/upload.rst:42
msgid "*http,server,location*"
msgstr ""

#: ../../source/modules/upload.rst:44
msgid "Enables resumable uploads."
msgstr ""

#: ../../source/modules/upload.rst:49
msgid "upload_store"
msgstr ""

#: ../../source/modules/upload.rst:50
msgid "*upload_store <directory> [<level 1> [<level 2> ] ... ]*"
msgstr ""

#: ../../source/modules/upload.rst:54
msgid ""
"Specifies a directory to which output files will be saved to. The directory "
"could be hashed. In this case all subdirectories should exist before "
"starting nginx."
msgstr ""

#: ../../source/modules/upload.rst:59
msgid "upload_state_store"
msgstr ""

#: ../../source/modules/upload.rst:60
msgid "*upload_state_store <directory> [<level 1> [<level 2> ] ... ]*"
msgstr ""

#: ../../source/modules/upload.rst:64
msgid ""
"Optional. Specifies a directory that will contain state files for resumable "
"uploads. The directory could be hashed. In this case all subdirectories "
"should exist before starting nginx."
msgstr ""

#: ../../source/modules/upload.rst:69
msgid "upload_store_access"
msgstr ""

#: ../../source/modules/upload.rst:70
msgid "*upload_store_access <mode>*"
msgstr ""

#: ../../source/modules/upload.rst:71
msgid "*user:rw*"
msgstr ""

#: ../../source/modules/upload.rst:74
msgid "Specifies access mode which will be used to create output files."
msgstr ""

#: ../../source/modules/upload.rst:79
msgid "upload_set_form_field"
msgstr ""

#: ../../source/modules/upload.rst:80
msgid "*upload_set_form_field <name> <value>*"
msgstr ""

#: ../../source/modules/upload.rst:84
msgid ""
"Optional. Specifies a form field(s) to generate for each uploaded file in "
"request body passed to backend. Both name and value could contain following "
"special variables: * $upload_field_name -- the name of original file field *"
" $upload_content_type -- the content type of file uploaded * "
"$upload_file_name -- the original name of the file being uploaded with "
"leading path elements in DOS and UNIX notation stripped. I.e. "
"\"D:\\Documents And Settings\\My Dcouments\\My Pictures\\Picture.jpg\" will "
"be converted to \"Picture.jpg\" and \"/etc/passwd\" will be converted to "
"\"passwd\". * $upload_tmp_path -- the path where the content of original "
"file is being stored to. The output file name consists 10 digits and "
"generated with the same algorithm as in proxy_temp_path directive. These "
"variables are valid only during processing of one part of original request "
"body."
msgstr ""

#: ../../source/modules/upload.rst:91 ../../source/modules/upload.rst:118
#: ../../source/modules/upload.rst:137 ../../source/modules/upload.rst:161
msgid "For example,"
msgstr ""

#: ../../source/modules/upload.rst:102
msgid "upload_aggregate_form_field"
msgstr ""

#: ../../source/modules/upload.rst:103
msgid "*upload_aggregate_form_field <name> <value>*"
msgstr ""

#: ../../source/modules/upload.rst:107
msgid ""
"Optional. Specifies a form field(s) containing aggregate attributes to "
"generate for each uploaded file in request body passed to backend. Both name"
" and value could contain standard nginx variables, variables from "
"upload_set_form_field directive and following additional special variables: "
"* $upload_file_md5 -- MD5 checksum of the file * $upload_file_md5_uc -- MD5 "
"checksum of the file in uppercase letters * $upload_file_sha1 -- SHA1 "
"checksum of the file * $upload_file_sha1_uc -- SHA1 checksum of the file in "
"uppercase letters * $upload_file_crc32 -- hexdecimal value of CRC32 of the "
"file * $upload_file_size -- size of the file in bytes * $upload_file_number "
"-- ordinal number of file in request body"
msgstr ""

#: ../../source/modules/upload.rst:116
msgid ""
"The value of a field specified by this directive is evaluated after "
"successful upload of the file, thus these variables are valid only at the "
"end of processing of one part of original request body."
msgstr ""

#: ../../source/modules/upload.rst:125
msgid ""
"variables $upload_file_md5_, $upload_file_md5_uc_, $upload_file_sha1_ and "
"$upload_file_sha1_uc_ utilize additional resourses to calculate MD5 and SHA1"
" checksums."
msgstr ""

#: ../../source/modules/upload.rst:130
msgid "upload_pass_form_field"
msgstr ""

#: ../../source/modules/upload.rst:131
msgid "*upload_pass_form_field <regex>*"
msgstr ""

#: ../../source/modules/upload.rst:135
msgid ""
"Specifies a regex pattern for names of fields which will be passed to "
"backend from original request body. This directive could be specified "
"multiple times per location. Field will be passed to backend as soon as "
"first pattern matches. For PCRE-unaware enviroments this directive specifies"
" exact name of a field to pass to backend. If directive is omitted, no "
"fields will be passed to backend from client."
msgstr ""

#: ../../source/modules/upload.rst:144
msgid "For PCRE-unaware environments:"
msgstr ""

#: ../../source/modules/upload.rst:154
msgid "upload_cleanup"
msgstr ""

#: ../../source/modules/upload.rst:155
msgid "*upload_cleanup <HTTP status/range> [<HTTP status/range ...]*"
msgstr ""

#: ../../source/modules/upload.rst:159
msgid ""
"Specifies HTTP statuses after generation of which all file successfuly "
"uploaded in current request will be removed. Used for cleanup after backend "
"or server failure. Backend may also explicitly signal errornous status if it"
" doesn't need uploaded files for some reason. HTTP status must be a "
"numerical value in range 400-599, no leading zeroes are allowed. Ranges of "
"statuses could be specified with a dash."
msgstr ""

#: ../../source/modules/upload.rst:170
msgid "upload_buffer_size"
msgstr ""

#: ../../source/modules/upload.rst:171
msgid "*upload__buffer_size <size>*"
msgstr ""

#: ../../source/modules/upload.rst:172
msgid "*size of memory page in bytes*"
msgstr ""

#: ../../source/modules/upload.rst:175
msgid ""
"Size in bytes of write buffer which will be used to accumulate file data and"
" write it to disk. This directive is intended to be used to compromise "
"memory usage vs. syscall rate."
msgstr ""

#: ../../source/modules/upload.rst:180
msgid "upload_max_part_header_len"
msgstr ""

#: ../../source/modules/upload.rst:181
msgid "*upload_max_part_header_len <size>*"
msgstr ""

#: ../../source/modules/upload.rst:182
msgid "*512*"
msgstr ""

#: ../../source/modules/upload.rst:185
msgid ""
"Specifies maximal length of part header in bytes. Determines the size of the"
" buffer which will be used to accumulate part headers."
msgstr ""

#: ../../source/modules/upload.rst:190
msgid "upload_max_file_size"
msgstr ""

#: ../../source/modules/upload.rst:191
msgid "*upload_max_file_size <size>*"
msgstr ""

#: ../../source/modules/upload.rst:195
msgid ""
"Specifies maximal size of the file. Files longer than the value of this "
"directive will be omitted. This directive specifies \"soft\" limit, in the "
"sense, that after encountering file longer than specified limit, nginx will "
"continue to process request body, trying to receive remaining files. For "
"\"hard\" limit client_max_body_size directive must be used. The value of "
"zero for this directive specifies that no restrictions on file size should "
"be applied."
msgstr ""

#: ../../source/modules/upload.rst:200
msgid "upload_limit_rate"
msgstr ""

#: ../../source/modules/upload.rst:201
msgid "*upload_limit_rate <rate>*"
msgstr ""

#: ../../source/modules/upload.rst:202
msgid "*0*"
msgstr ""

#: ../../source/modules/upload.rst:203 ../../source/modules/upload.rst:213
#: ../../source/modules/upload.rst:223 ../../source/modules/upload.rst:233
msgid "*main,server,location*"
msgstr ""

#: ../../source/modules/upload.rst:205
msgid ""
"Specifies upload rate limit in bytes per second. Zero means rate is "
"unlimited."
msgstr ""

#: ../../source/modules/upload.rst:210
msgid "upload_max_output_body_len"
msgstr ""

#: ../../source/modules/upload.rst:211
msgid "*upload_max_output_body_len <size>*"
msgstr ""

#: ../../source/modules/upload.rst:212
msgid "*100k*"
msgstr ""

#: ../../source/modules/upload.rst:215
msgid ""
"Specifies maximal length of the output body. This prevents piling up of non-"
"file form fields in memory. Whenever output body overcomes specified limit "
"error 413 (Request entity too large) will be generated. The value of zero "
"for this directive specifies that no restrictions on output body length "
"should be applied."
msgstr ""

#: ../../source/modules/upload.rst:220
msgid "upload_tame_arrays"
msgstr ""

#: ../../source/modules/upload.rst:221
msgid "*upload_tame_arrays <on/off>*"
msgstr ""

#: ../../source/modules/upload.rst:225
msgid ""
"Specifies whether square brackets in file field names must be dropped "
"(required for PHP arrays)."
msgstr ""

#: ../../source/modules/upload.rst:230
msgid "upload_pass_args"
msgstr ""

#: ../../source/modules/upload.rst:231
msgid "*upload_pass_args <on/off>*"
msgstr ""

#: ../../source/modules/upload.rst:235
msgid ""
"Enables forwarding of query arguments to location, specified by upload_pass."
" Ineffective with named locations. Example:"
msgstr ""

#: ../../source/modules/upload.rst:254
msgid ""
"In this example backend gets request URI \"/upload?id=5\". In case of "
"upload_pass_args off backend gets \"/upload\"."
msgstr ""

#: ../../source/modules/upload.rst:259
msgid "Example Setup"
msgstr ""

#: ../../source/modules/upload.rst:262
msgid "Example Configuration"
msgstr ""

#: ../../source/modules/upload.rst:305
msgid "Example Form"
msgstr ""
